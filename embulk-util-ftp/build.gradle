apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "signing"

group = "${rootProject.group}"
version = "${rootProject.version}"
description = "Utility classes for Embulk FTP plugins."

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    compileClasspath.resolutionStrategy.activateDependencyLocking()
    runtimeClasspath.resolutionStrategy.activateDependencyLocking()
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compileOnly "org.embulk:embulk-api:0.10.19"
    compileOnly "org.embulk:embulk-spi:0.10.19"

    compile("org.embulk:embulk-util-config:0.1.4") {
        // They conflict with embulk-core. They are once excluded here,
        // and added explicitly with versions exactly the same with embulk-core:0.10.19.
        exclude group: "com.fasterxml.jackson.core", module: "jackson-annotations"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-databind"
        exclude group: "com.fasterxml.jackson.datatype", module: "jackson-datatype-jdk8"
        exclude group: "javax.validation", module: "validation-api"
    }

    // They are once excluded from transitive dependencies of other dependencies,
    // and added explicitly with versions exactly the same with embulk-core:0.10.19.
    compile "com.fasterxml.jackson.core:jackson-annotations:2.6.7"
    compile "com.fasterxml.jackson.core:jackson-core:2.6.7"
    compile "com.fasterxml.jackson.core:jackson-databind:2.6.7"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.6.7"
    compile "javax.validation:validation-api:1.1.0.Final"

    compile "org.bouncycastle:bcpkix-jdk15on:1.52"

    testCompile "junit:junit:4.13"
    testCompile "org.embulk:embulk-core:0.10.19"
    testCompile "org.embulk:embulk-core:0.10.19:tests"
    testCompile "org.embulk:embulk-deps:0.10.19"
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

jar {
    from rootProject.file("LICENSE")
}

sourcesJar {
    from rootProject.file("LICENSE")
}

javadocJar {
    from rootProject.file("LICENSE")
}

publishing {
    publications {
        maven(MavenPublication) {  // Publish it with "publishMavenPublicationToMavenCentralRepository".
            from components.java  // Must be "components.java". The dependency modification works only for it.

            pom {  // https://central.sonatype.org/pages/requirements.html
                packaging "jar"
                url = "https://www.embulk.org/"

                licenses {
                    license {
                        // http://central.sonatype.org/pages/requirements.html#license-information
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        name = "Sadayuki Furuhashi"
                        email = "frsyuki@gmail.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/embulk/embulk-input-ftp.git"
                    developerConnection = "scm:git:git@github.com:embulk/embulk-input-ftp.git"
                    url = "https://github.com/embulk/embulk-input-ftp"
                }
            }
        }
    }

    repositories {
        maven {  // publishMavenPublicationToMavenCentralRepository
            name = "mavenCentral"
            if (project.version.endsWith("-SNAPSHOT")) {
                url "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            }

            credentials {
                username = project.hasProperty("ossrhUsername") ? ossrhUsername : ""
                password = project.hasProperty("ossrhPassword") ? ossrhPassword : ""
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}
